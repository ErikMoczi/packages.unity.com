using System.IO;
using System.Linq;
using NUnit.Framework;
using UnityEditor.TestTools.TestRunner;
using UnityEngine.TestTools;

namespace FrameworkTests
{
    public class TestFileCleanupVerifierTests
    {
        const string k_testFileName1 = "Assets/CleanupTestFile1.txt";
        const string k_testFileName2 = "Assets/CleanupTestFile2.txt";

        [Test]
        public void TestNewFilesDetectedByCleanupVerifier()
        {
            string output = null;
            var outputInvoked = 0;
            var verifierUnderTest = new TestFileCleanupVerifier();
            verifierUnderTest.logAction = (object val) =>
            {
                output = val.ToString();
                outputInvoked++;
            };

            verifierUnderTest.GetAllAssetPathsAction = () => new string[0];
            verifierUnderTest.RegisterExistingFiles();
            verifierUnderTest.GetAllAssetPathsAction = () => new[] { k_testFileName1 };

            verifierUnderTest.VerifyNoNewFilesAdded();

            Assert.AreEqual(1, outputInvoked, "Expected only warning logged to the log action.");
            Assert.IsTrue(output.StartsWith("Files generated by test without cleanup."), "Expected the output to start with 'Files generated by test without cleanup.'. Got '" + output + "'");
            Assert.IsTrue(output.Contains("Found 1 new files."), "Expected the output to contain the number of files (1). Got '" + output + "'");
            Assert.IsTrue(output.Contains(k_testFileName1.Split('/').Last()), "Expected the output to contain the filename. Got Got '" + output + "'");
        }

        [Test]
        public void TestCleanupVerifierRegisteringMultipleTimesDoesNotResetTheFileList()
        {
            string output = null;
            var outputInvoked = 0;
            var verifierUnderTest = new TestFileCleanupVerifier();
            verifierUnderTest.logAction = (object val) =>
            {
                output = val.ToString();
                outputInvoked++;
            };

            verifierUnderTest.GetAllAssetPathsAction = () => new string[0];
            verifierUnderTest.RegisterExistingFiles();
            verifierUnderTest.GetAllAssetPathsAction = () => new[] { k_testFileName2 };
            verifierUnderTest.RegisterExistingFiles();
            verifierUnderTest.VerifyNoNewFilesAdded();

            Assert.AreEqual(1, outputInvoked, "Expected only warning logged to the log action.");
            Assert.IsTrue(output.StartsWith("Files generated by test without cleanup."), "Expected the output to start with 'Files generated by test without cleanup.'. Got '" + output + "'");
            Assert.IsTrue(output.Contains("Found 1 new files."), "Expected the output to contain the number of files (1). Got '" + output + "'");
            Assert.IsTrue(output.Contains(k_testFileName2.Split('/').Last()), "Expected the output to contain the filename. Got Got '" + output + "'");
        }
    }
}
